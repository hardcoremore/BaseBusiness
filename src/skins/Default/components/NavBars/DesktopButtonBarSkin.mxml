<?xml version="1.0" encoding="utf-8"?>
<ui:SkinBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:Library="com.desktop.system.Application.Library.*"
        alpha.disabled="0.5" 
		xmlns:ui="com.desktop.system.Application.Library.ui.*">

    <fx:Metadata>
    <![CDATA[ 
        [HostComponent("com.desktop.ui.Components.NavBars.DesktopButtonBar")]
    ]]>
    </fx:Metadata> 
	
	<fx:Script>
		<![CDATA[
			import com.desktop.ui.Components.NavBars.DesktopButtonBar;
			
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			
			import spark.layouts.VerticalLayout;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				
				if( getStyle( "orientation" ) == DesktopButtonBar.HORIZONTAL_ORIENTATION )
				{
					defaultGroup.layout = new HorizontalLayout();
					
					if( scrollButtonGroup )
					{
						var vl:VerticalLayout = new VerticalLayout();
							vl.gap = 0;
							
						scrollButtonGroup.layout = vl;
					}
					
				}
				else if( getStyle( "orientation" ) == DesktopButtonBar.VERTICAL_ORIENTATION )
				{
					defaultGroup.layout = new VerticalLayout();
					
					if( scrollButtonGroup )
					{
						var hl:HorizontalLayout = new HorizontalLayout();
							hl.gap = 0;
							
						scrollButtonGroup.layout = hl;
					}
				}	
			}
			
			override protected function measure():void
			{
				super.measure();
				
				if( scrollButtonGroup )
				{
					if( getStyle( "orientation" ) == DesktopButtonBar.HORIZONTAL_ORIENTATION )
					{
						scrollButtonGroup.percentWidth = undefined;
						scrollButtonGroup.percentHeight = 100;
					}
					else if( getStyle( "orientation" ) == DesktopButtonBar.VERTICAL_ORIENTATION )
					{
						scrollButtonGroup.percentWidth = 100;
						scrollButtonGroup.percentHeight = undefined;
					}
				}
			}
			
		]]>
	</fx:Script>
	
    <ui:states>
        <s:State name="normal" />
		<s:State name="scroll" />
        <s:State name="disabled" />
    </ui:states>
	
		<s:Group id="defaultGroup" width="100%" height="100%">
			
			<s:Scroller skinClass="spark.skins.spark.ScrollerSkin" id="buttonBarScroller" verticalScrollPolicy="off" horizontalScrollPolicy="off">
				
				<s:Group id="buttonBarHolder">
					
					<s:Group id="buttonBar">
						
						<s:layout>
							<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
						</s:layout>
						
					</s:Group>

				</s:Group>
					
			</s:Scroller>
			
			<s:Group id="scrollButtonGroup" includeIn="scroll">
				<s:Button skinClass="spark.skins.spark.NumericStepperIncrementButtonSkin" id="incrementalScrollButton" width="100%" height="100%" />
				<s:Button skinClass="spark.skins.spark.NumericStepperDecrementButtonSkin" id="decrementalScrollButton" width="100%" height="100%"/>
			</s:Group>
			
		</s:Group>
	
</ui:SkinBase>
