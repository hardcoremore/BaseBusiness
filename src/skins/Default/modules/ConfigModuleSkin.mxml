<?xml version="1.0" encoding="utf-8"?>
<ui:SkinBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:Library="com.desktop.system.Application.Library.*" 
		xmlns:ui="com.desktop.system.Application.Library.ui.*" 
		creationComplete="main_creationCompleteHandler(event)"
		xmlns:Button="com.desktop.ui.Components.Button.*" 
		xmlns:Group="com.desktop.ui.Components.Group.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("interfaces.modules.IConfigModule")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.desktop.system.Application.Library.ui.FormHelper;
			
			import mx.controls.Image;
			import mx.events.FlexEvent;
			
			import spark.primitives.BitmapImage;
			
			protected function main_creationCompleteHandler(event:FlexEvent):void
			{		
				notifier.minWidth = mainContentContainer.measuredWidth;
			}
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<ui:states>
		<s:State name="disabled" />
		<s:State name="normal" />
	</ui:states>
	
	<s:Scroller id="scroller" top="0" left="0" bottom="0" right="0" skinClass="spark.skins.spark.ScrollerSkin">
		
		<s:Group id="contentGroup" minHeight="0" minWidth="0" top="0" left="0" right="0" bottom="0">
			
			<Group:ModuleNotification id="notifier" 
									  width="100%" height="100%" 
									  minHeight="{mainContentContainer.height + configTab.height }"
									  skinClass="skins.Default.components.Group.ModuleNotificationSkin">
				
				<Group:LoadingContainer id="loadingContainer" 
										width="100%" height="100%" 
										skinClass="skins.Default.components.Group.LoadingContainerSkin">
					
					<s:VGroup width="100%" height="100%" minWidth="0" minHeight="0" horizontalAlign="center" verticalAlign="middle">
						
						<s:TabBar id="configTab" maxWidth="500"
								  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'tabBarSkin', this.session.skinsLocaleName ) }">
							<s:dataProvider>
								<s:ArrayList>
									<fx:Object label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'system' )}"
											   icon="{ resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'systemSettingsIcon', this.session.skinsLocaleName ) }" />
									
									<fx:Object label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'appearance' )}"
											   icon="{ resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'appearanceIcon', this.session.skinsLocaleName ) }" />
								</s:ArrayList>
							</s:dataProvider>
						</s:TabBar>
						
						
						<mx:ViewStack selectedIndex="{configTab.selectedIndex}" id="mainContentContainer" width="100%" height="100%">
							
							
							<mx:VBox width="100%" height="100%">
								 
								<s:Form skinClass="spark.skins.spark.FormSkin" width="100%">
									
									<s:FormItem label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'autoLockTime' )}: " 
												skinClass="spark.skins.spark.FormItemSkin">
										
										<s:HSlider id="autoLockSlider"  
												   minimum="5" 
												   maximum="120" 
												   value="10" 
												   snapInterval="5" 
												   skinClass="spark.skins.spark.HSliderSkin"/>
									</s:FormItem>
									<!--
									<s:FormItem label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'language' )}: " 
												skinClass="spark.skins.spark.FormItemSkin">
										
										<s:ComboBox id="languageCb" 
													selectedIndex="0" 
													requireSelection="true"
													labelToItemFunction="{ FormHelper.disableLabelToItemFunction }"
													skinClass="spark.skins.spark.ComboBoxSkin">
											
											<s:dataProvider>
												<s:ArrayList>
													<fx:Object label='Српски' value="sr_RS"/>	
													<fx:Object label='English' value="en_US"/>
												</s:ArrayList>
											</s:dataProvider>
											
										</s:ComboBox>	
									</s:FormItem>
									-->
									<s:VGroup width="100%">
										
										<s:Label text="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'autoStartModules' )}: " />		
											
										<s:DataGrid  id="autoStrat" width="100%" height="350">
											<s:columns>
												<s:ArrayCollection>
													<s:GridColumn headerText="Slika" />
													<s:GridColumn headerText="Ime Modula" />
													<s:GridColumn headerText="Auto start" />	
												</s:ArrayCollection>
												
											</s:columns>
										</s:DataGrid>
											
									</s:VGroup>
									
									<s:FormItem skinClass="spark.skins.spark.FormItemSkin">
										<s:Button id="saveSystemConfig" 
												  label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName,'save')}" 
												  skinClass="skins.Default.components.Buttons.DesktopButtonSkin"/>
									</s:FormItem>
									
								</s:Form>
								
							</mx:VBox>
							
							<mx:VBox width="100%" paddingLeft="10">
								
								
								<s:TabBar id="configVisialSettingsTab"
										  selectedIndex="0" 
										  skinClass="spark.skins.spark.TabBarSkin">
									
									<s:ArrayCollection>
										<fx:Object label="Desktop"/>
										<fx:Object label="Window"/>
										<fx:Object label="TaskBar"/>
									</s:ArrayCollection>
									
								</s:TabBar>
								
								<mx:ViewStack width="100%" height="100%" 
											  id="configFormNavigators"
											  creationPolicy="all"
											  selectedIndex="{configVisialSettingsTab.selectedIndex}">
									
									<mx:Box label="Desktop" width="100%" height="100%">
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'iconSize')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											<s:HSlider id="iconSizeSlider" 
													   skinClass="spark.skins.spark.HSliderSkin" 
													   maximum="256" 
													   minimum="16" 
													   value="64" 
													   stepSize="16" 
													   liveDragging="false"
													   toolTip="{iconSizeSlider.value}" />
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'fontSize')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											<s:HSlider id="fontSizeSlider" 
													   skinClass="spark.skins.spark.HSliderSkin" 
													   maximum="48" 
													   minimum="6" 
													   value="14"
													   liveDragging="false"
													   stepSize="1"
													   toolTip="{fontSizeSlider.value}"/>
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'controllButtonSize')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											<s:HSlider id="controllButtonSizeSlider" 
													   skinClass="spark.skins.spark.HSliderSkin" 
													   maximum="256" 
													   minimum="16" 
													   value="48" 
													   stepSize="16" 
													   liveDragging="false"
													   toolTip="{controllButtonSizeSlider.value}" />
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'wallpaperType')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											
											<s:ComboBox id="desktopWallPaperType" labelToItemFunction="{FormHelper.disableLabelToItemFunction}" 
																				 skinClass="spark.skins.spark.ComboBoxSkin" requireSelection="true">
												<s:dataProvider>
													<s:ArrayList>
														<fx:Object label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName,'color')}" value="color"/>
														<fx:Object label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName,'image')}" value="image"/>	
													</s:ArrayList>
												</s:dataProvider>
											</s:ComboBox>
											
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'wallpaperImageUrl')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											<s:TextInput id="wallpaperImageUrlInput" width="200" /> 					
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'wallpaperColor')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											<mx:ColorPicker id="desktopWallpaperColorPicker" />					
										</s:FormItem>
										
										
									</mx:Box>
									
									<mx:Box label="Window" width="100%" height="100%">
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'windowBackgroundColor')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											<mx:ColorPicker id="windowBackgroundColorPicker" />					
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'windowBackgroundAlpha')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											
											<s:HSlider id="windowBackgroundAlphaSlider" 
													   minimum="0" maximum="1" stepSize="0.05"
													   liveDragging="false"
													   skinClass="spark.skins.spark.HSliderSkin"/>
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'windowBorderColor')}: "
													skinClass="spark.skins.spark.FormItemSkin"> 
											<mx:ColorPicker id="windowBorderColorColorPicker" />					
										</s:FormItem>
										
										<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'windowBorderAlpha')}: "
													skinClass="spark.skins.spark.FormItemSkin">
											
											<s:HSlider id="windowBorderAlphaSlider" minimum="0" maximum="1"
													   liveDragging="false"
													   stepSize="0.05" 
													   skinClass="spark.skins.spark.HSliderSkin"/>
										</s:FormItem>
									</mx:Box>
									
									<mx:Box label="Task Bar" width="100%" height="100%">
										
										<s:Form skinClass="spark.skins.spark.FormSkin" width="100%" height="100%">
											
											<s:FormItem label="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'taskBarPosition' )}: " 
														skinClass="spark.skins.spark.FormItemSkin">
												
												<s:ComboBox id="taskBarPositionComboBox" 
															selectedIndex="0" 
															requireSelection="true"
															labelToItemFunction="{ FormHelper.disableLabelToItemFunction }"
															skinClass="spark.skins.spark.ComboBoxSkin"
															width="70">
													
													<s:dataProvider>
														<s:ArrayList>
															<fx:Object label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'left')}" value="taskbar-left-position"/>	
															<fx:Object label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'right')}" value="taskbar-right-position"/>
															<fx:Object label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'top')}" value="taskbar-top-position"/>
															<fx:Object label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'bottom')}" value="taskbar-bottom-position"/>
														</s:ArrayList>
													</s:dataProvider>
													
												</s:ComboBox>
												
											</s:FormItem>
											
											<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'taskBarLabelVisible')}: " 
														skinClass="spark.skins.spark.FormItemSkin">
												
												<s:CheckBox id="taskBarLabelVisibleCheckBox" />
												
											</s:FormItem>
											
											<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'taskBarThickness')}: "
														skinClass="spark.skins.spark.FormItemSkin">
												
												<s:HSlider id="taskBarThicknessSlider" 
														   skinClass="spark.skins.spark.HSliderSkin" 
														   maximum="256" 
														   minimum="16" 
														   value="32" 
														   stepSize="16"
														   liveDragging="false"
														   toolTip="{taskBarThicknessSlider.value}"/>
											</s:FormItem>
											
											<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'taskBarBackgroundColor')}: "
														skinClass="spark.skins.spark.FormItemSkin"> 
												<mx:ColorPicker id="taskBarBackgroundColorColorPicker" />					
											</s:FormItem>
											
											<s:FormItem label="{resourceManager.getString(this.session.config.LOCALE_CONFIG.dictonaryResourceName,'taskBarBackgroundAlpha')}: "
														skinClass="spark.skins.spark.FormItemSkin">
												
												<s:HSlider id="taskBarBackgroundAlphaSlider" 
														   skinClass="spark.skins.spark.HSliderSkin" 
														   maximum="1" 
														   minimum="0" 
														   value="1" 
														   stepSize="0.05"
														   liveDragging="true"
														   toolTip="{taskBarBackgroundAlphaSlider.value}"/>
												
											</s:FormItem>
										</s:Form>
				
									</mx:Box>
									
								</mx:ViewStack>
								
								<s:DataGrid width="100%" height="100%" id="appearancesDataHolder" minHeight="200">
									<s:columns>
										<s:ArrayCollection>
											<s:GridColumn dataField="desktop_appearance_id" headerText="ID" visible="false" />
											<s:GridColumn dataField="desktop_appearance_name" headerText="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'name' )}" />
											<s:GridColumn dataField="desktop_appearance_default" headerText="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'default' )}" />
										</s:ArrayCollection>
									</s:columns>
								</s:DataGrid>
								
								 <s:FormItem label="{ resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'name' ) }: ">
									 <s:TextInput id="desktop_appearance_name" />
								 </s:FormItem>
								
								<s:FormItem label="{ resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'default' ) }: ">
									<s:CheckBox id="desktop_appearance_default" />
								</s:FormItem>
								
								<s:HGroup id="controllGroup" paddingLeft="10" paddingBottom="10">
									
									<Button:DesktopControllButton id="newThemeButton"
																  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'newTheme' ) }"
																  icon="{resourceManager.getClass( 'systemIconClasses', 'addIcon', 'Default_skinClasses' ) }"
																  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
									
									<Button:DesktopControllButton id="saveThemeButton" 
																  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'save')}"  
																  icon="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'saveIcon', this.session.skinsLocaleName )}" 
																  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
									
									<Button:DesktopControllButton id="applyThemeButton" 
																  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'apply')}"  
																  icon="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'updateIcon', this.session.skinsLocaleName )}" 
																  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
									
									<Button:DesktopControllButton id="refreshButton"
																  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'refresh' )}"
																  icon="{resourceManager.getClass(this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'refreshIcon', this.session.skinsLocaleName ) }"
																  skinClass="{resourceManager.getClass(this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
									
									<Button:DesktopControllButton id="deleteThemeButton" 
																  right="0" 
																  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'delete' ) }"
																  icon="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'deleteErrorIcon', this.session.skinsLocaleName ) }"
																  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
									
								</s:HGroup>
								
								
							</mx:VBox>
								
						</mx:ViewStack>
								
					</s:VGroup>
					
				</Group:LoadingContainer>
				
			</Group:ModuleNotification>
			
		</s:Group>
		
	</s:Scroller>
	
</ui:SkinBase>
