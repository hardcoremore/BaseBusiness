<?xml version="1.0" encoding="utf-8"?>
<ui:SkinBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
			 alpha.disabled="0.5"  
			 xmlns:Library="com.desktop.system.Application.Library.*" 
			 xmlns:Button="com.desktop.ui.Components.Button.*"
			 xmlns:ui="com.desktop.system.Application.Library.ui.*"
			 xmlns:Group="com.desktop.ui.Components.Group.*" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" 
			 xmlns:app="components.app.*" >
	
	<fx:Metadata>[HostComponent("interfaces.modules.sub.IEmployeeWorkingScenarioModule")]</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import spark.filters.GlowFilter;			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<s:RadioButtonGroup id="employee_gender" />
		<s:RadioButtonGroup id="employee_hired" />
	</fx:Declarations>
	
	<ui:states>
		<s:State name="normal" />
		<s:State name="disabled" />
	</ui:states>
	
	<s:Scroller id="scroller" top="0" left="0" bottom="0" right="0" skinClass="spark.skins.spark.ScrollerSkin">
		
		<s:Group id="contentGroup" minHeight="0" minWidth="0" top="0" bottom="0" left="0" right="0">
			
			<Group:ModuleNotification id="notifier" width="100%" height="100%"
									  maxWidth="{daysFormGroup.width + scenariosListGroup.width + 10}"
									  minWidth="{ daysFormGroup.width + scenariosListGroup.width }" 
									  minHeight="{ Math.max( daysFormGroup.height, scenariosListGroup.height ) }"
									  skinClass="skins.Default.components.Group.ModuleNotificationSkin">
				
				<Group:LoadingContainer id="loadingContainer" width="100%" height="100%"
										skinClass="skins.Default.components.Group.LoadingContainerSkin">
				
					<s:HGroup width="100%" height="100%">
						
						<s:VGroup id="daysFormGroup">
							
							<s:Group id="dayFormsHolder">
								
								<app:WorkDayForm id="mondayForm" skinClass="skins.Default.components.app.WorkDayFormSkin"  day="1" visible="false"/>
								<app:WorkDayForm id="tuesdayForm" skinClass="skins.Default.components.app.WorkDayFormSkin" day="2" visible="false" />
								<app:WorkDayForm id="wednesdayForm" skinClass="skins.Default.components.app.WorkDayFormSkin" day="3" visible="false" />
								<app:WorkDayForm id="thursdayForm" skinClass="skins.Default.components.app.WorkDayFormSkin" day="4" visible="false" />
								<app:WorkDayForm id="fridayForm" skinClass="skins.Default.components.app.WorkDayFormSkin" day="5" visible="false" />
								<app:WorkDayForm id="saturdayForm" skinClass="skins.Default.components.app.WorkDayFormSkin" day="6" visible="false" />
								<app:WorkDayForm id="sundayForm" skinClass="skins.Default.components.app.WorkDayFormSkin" day="7" visible="false" />
								
							</s:Group>
							
							<s:List id="workDaysList" skinClass="spark.skins.spark.ListSkin" selectedIndex="-1" width="100%"/>
							
						</s:VGroup>
						
						<s:VGroup id="scenariosListGroup" height="100%" maxHeight="{ daysFormGroup.height }">
		
							<s:DataGrid width="100%" height="100%"
										id="workScenarioDataHolder"
										maxWidth="300"
										filters="{[new spark.filters.GlowFilter(0xCCCCCC, 1, 6, 6, 2, 2)]}"
										skinClass="spark.skins.spark.DataGridSkin">
								<s:columns>
									<s:ArrayList id="employeesColumns">
										<s:GridColumn dataField="employee_working_scenario_id" headerText="ID" visible="false"/>
										<s:GridColumn dataField="employee_working_scenario_name" headerText="{ resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'name') }" />
									</s:ArrayList>
								</s:columns>
							</s:DataGrid>
							
							<s:VGroup>
								<s:Label text="{ resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'name') }:" />
								<s:TextInput id="employee_working_scenario_name" width="250" />						
							</s:VGroup>
							
							<s:HGroup id="controllGroup">
								
								<Button:DesktopControllButton id="newScenarioButton"
															  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'newWorkingScenario' ) }"
															  icon="{resourceManager.getClass( 'systemIconClasses', 'addIcon', 'Default_skinClasses' ) }"
															  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
								
								<Button:DesktopControllButton id="saveScenarioButton" 
															  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'save')}"  
															  icon="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'saveIcon', this.session.skinsLocaleName )}" 
															  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
								
								<Button:DesktopControllButton id="refreshButton"
															  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'refresh' )}"
															  icon="{resourceManager.getClass(this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'refreshIcon', this.session.skinsLocaleName ) }"
															  skinClass="{resourceManager.getClass(this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
								
								<Button:DesktopControllButton id="resetScenarioDayButton" 
															  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'reset')}"  
															  icon="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'clearIcon', this.session.skinsLocaleName )}" 
															  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
								
								<Button:DesktopControllButton id="deleteScenarioButton" 
															  right="0" 
															  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'delete' ) }"
															  icon="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.systemIconsResourceName, 'deleteErrorIcon', this.session.skinsLocaleName ) }"
															  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
							</s:HGroup>
							
						</s:VGroup>
						
					</s:HGroup>
			
				</Group:LoadingContainer>
				
			</Group:ModuleNotification>
			
		</s:Group>
	
	</s:Scroller>
	
</ui:SkinBase>

