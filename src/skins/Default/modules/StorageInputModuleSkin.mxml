<?xml version="1.0" encoding="utf-8"?>
<ui:SkinBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
				  xmlns:s="library://ns.adobe.com/flex/spark" 
    			  xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
				  alpha.disabled="0.5"  
				  xmlns:Library="com.desktop.system.Application.Library.*" 
				  xmlns:Button="com.desktop.ui.Components.Button.*"
				  xmlns:Group="com.desktop.ui.Components.Group.*"
				  xmlns:mx="library://ns.adobe.com/flex/mx" 
				  xmlns:app="components.app.*"
				  xmlns:ui="com.desktop.system.Application.Library.ui.*" xmlns:components="components.*">
	
	<fx:Metadata>[HostComponent("interfaces.modules.sub.ISaveItemModule")]</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.desktop.system.Application.Library.ui.FormHelper;
			
			import spark.filters.GlowFilter;
		]]>
	</fx:Script>
	
    <ui:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </ui:states>
    
    <!--
        Note: setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableContainer#contentGroup -->

	<s:Scroller id="scroller" top="0" left="0" bottom="0" right="0" skinClass="spark.skins.spark.ScrollerSkin">
		
		<s:Group id="contentGroup" minWidth="0" minHeight="0" top="0" bottom="0" right="0" left="0">
			
			<Group:ModuleNotification id="notifier" 
									  width="100%" 
									  height="100%"
									  minHeight="{ 500 }" minWidth="{ 800 }"
									  skinClass="skins.Default.components.Group.ModuleNotificationSkin">
				
				<Group:LoadingContainer id="loadingContainer" width="100%" height="100%"
										skinClass="skins.Default.components.Group.LoadingContainerSkin">
					
						<s:VGroup width="100%" height="100%">
							
							<s:HGroup verticalAlign="middle">
								
								<s:ComboBox id="storagesList" labelToItemFunction="{FormHelper.disableLabelToItemFunction}" paddingLeft="10" 
											prompt="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'selectStorage' ) }" />
									
								<Button:DesktopControllButton id="newStorageInputButton"
															  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'newStorageInput' ) }"
															  icon="{resourceManager.getClass( 'systemIconClasses', 'addIcon', this.session.skinsLocaleName ) }"
															  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
								
								<Button:DesktopControllButton id="refreshStorageInputButton"
															  toolTip="{resourceManager.getString( this.session.config.LOCALE_CONFIG.dictonaryResourceName, 'refresh' ) }"
															  icon="{resourceManager.getClass( 'systemIconClasses', 'refreshIcon', this.session.skinsLocaleName ) }"
															  skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'desktopButton', this.session.skinsLocaleName ) }"/>
								
							</s:HGroup>

							
							<s:HGroup width="100%" height="100%">
								
								<s:VGroup width="100%" height="100%">
									<s:DataGrid width="100%" height="100%"
												id="storageInputDataHolder"
												filters="{[new spark.filters.GlowFilter(0xCCCCCC, 1, 6, 6, 2, 2)]}"
												skinClass="spark.skins.spark.DataGridSkin">
										<s:columns>
											<s:ArrayList id="storageInputColumns">
												<s:GridColumn dataField="storage_items_input_id" headerText="ID" visible="false"/>
												<s:GridColumn dataField="storage_id" headerText="ID" visible="false"/>
												<s:GridColumn dataField="storage_name" headerText="ID" />
												<s:GridColumn dataField="storage_items_input_code" headerText="code" />
												<s:GridColumn dataField="storage_items_input_date" headerText="date" />
												<s:GridColumn dataField="storage_items_input_ammount_total" headerText="amountTotal" />
												<s:GridColumn dataField="storage_items_input_price_total" headerText="priceTotal" />
												<s:GridColumn dataField="storage_items_input_tax_total" headerText="taxTotal" />
											</s:ArrayList>
										</s:columns>
									</s:DataGrid>
									
									<components:Paging id="storageInputPaging" left="0" 
													   skinClass="{resourceManager.getClass( this.session.config.LOCALE_CONFIG.skinsResourceName, 'pagingComponent', this.session.skinsLocaleName ) }"/>
									
								</s:VGroup>
								
								<s:DataGrid width="100%" height="100%"
											id="storageInputContentsDataHolder"
											filters="{[new spark.filters.GlowFilter(0xCCCCCC, 1, 6, 6, 2, 2)]}"
											skinClass="spark.skins.spark.DataGridSkin">
									<s:columns>
										<s:ArrayList id="storageInputContentsColumns">
											<s:GridColumn dataField="storage_items_input_id" headerText="ID" visible="false"/>
											<s:GridColumn dataField="storage_item_id" headerText="code" visible="false"/>
											<s:GridColumn dataField="storage_item_name" headerText="name" />
											<s:GridColumn dataField="storage_item_amount" headerText="amount" />
											<s:GridColumn dataField="storage_item_price" headerText="price" />
											<s:GridColumn dataField="storage_item_tax_amount" headerText="taxAmount" />
											<s:GridColumn dataField="storage_item_price_total" headerText="priceTotal" />
											<s:GridColumn dataField="storage_item_tax_total" headerText="taxTotal" />
										</s:ArrayList>
									</s:columns>
								</s:DataGrid>
								
							</s:HGroup>

						</s:VGroup>
										
				</Group:LoadingContainer>
				
			</Group:ModuleNotification>
			
		</s:Group>

	</s:Scroller>
	
</ui:SkinBase>
